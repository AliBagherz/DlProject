////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Encrypt.vf
// /___/   /\     Timestamp : 02/06/2021 13:26:42
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family xc9500xl -verilog P:/Xilinx/Project/DlProject-master/Encrypt.vf -w P:/Xilinx/Project/DlProject-master/Encrypt.sch
//Design Name: Encrypt
//Device: xc9500xl
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module IP1_MUSER_Encrypt(B0, 
                         B1, 
                         B2, 
                         B3, 
                         B4, 
                         B5, 
                         B6, 
                         B7, 
                         O0, 
                         O1, 
                         O2, 
                         O3, 
                         O4, 
                         O5, 
                         O6, 
                         O7);

    input B0;
    input B1;
    input B2;
    input B3;
    input B4;
    input B5;
    input B6;
    input B7;
   output O0;
   output O1;
   output O2;
   output O3;
   output O4;
   output O5;
   output O6;
   output O7;
   
   
   BUF  XLXI_2 (.I(B0), 
               .O(O1));
   BUF  XLXI_3 (.I(B1), 
               .O(O5));
   BUF  XLXI_4 (.I(B2), 
               .O(O2));
   BUF  XLXI_5 (.I(B3), 
               .O(O0));
   BUF  XLXI_6 (.I(B4), 
               .O(O3));
   BUF  XLXI_7 (.I(B5), 
               .O(O7));
   BUF  XLXI_8 (.I(B6), 
               .O(O4));
   BUF  XLXI_9 (.I(B7), 
               .O(O6));
endmodule
`timescale 1ns / 1ps

module SW_MUSER_Encrypt(B0, 
                        B1, 
                        B2, 
                        B3, 
                        B4, 
                        B5, 
                        B6, 
                        B7, 
                        O0, 
                        O1, 
                        O2, 
                        O3, 
                        O4, 
                        O5, 
                        O6, 
                        O7);

    input B0;
    input B1;
    input B2;
    input B3;
    input B4;
    input B5;
    input B6;
    input B7;
   output O0;
   output O1;
   output O2;
   output O3;
   output O4;
   output O5;
   output O6;
   output O7;
   
   
   BUF  XLXI_1 (.I(B0), 
               .O(O4));
   BUF  XLXI_2 (.I(B1), 
               .O(O5));
   BUF  XLXI_3 (.I(B2), 
               .O(O6));
   BUF  XLXI_4 (.I(B3), 
               .O(O7));
   BUF  XLXI_5 (.I(B4), 
               .O(O0));
   BUF  XLXI_6 (.I(B5), 
               .O(O1));
   BUF  XLXI_7 (.I(B6), 
               .O(O2));
   BUF  XLXI_8 (.I(B7), 
               .O(O3));
endmodule
`timescale 1ns / 1ps

module P4_MUSER_Encrypt(B0, 
                        B1, 
                        B2, 
                        B3, 
                        O0, 
                        O1, 
                        O2, 
                        O3);

    input B0;
    input B1;
    input B2;
    input B3;
   output O0;
   output O1;
   output O2;
   output O3;
   
   
   BUF  XLXI_1 (.I(B0), 
               .O(O3));
   BUF  XLXI_2 (.I(B1), 
               .O(O0));
   BUF  XLXI_3 (.I(B2), 
               .O(O2));
   BUF  XLXI_4 (.I(B3), 
               .O(O1));
endmodule
`timescale 1ns / 1ps

module S0_MUSER_Encrypt(A0, 
                        A1, 
                        A2, 
                        A3, 
                        O0, 
                        O1);

    input A0;
    input A1;
    input A2;
    input A3;
   output O0;
   output O1;
   
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_30;
   wire XLXN_31;
   
   AND3B2  XLXI_1 (.I0(A1), 
                  .I1(A0), 
                  .I2(A2), 
                  .O(XLXN_19));
   AND3B2  XLXI_2 (.I0(A2), 
                  .I1(A0), 
                  .I2(A1), 
                  .O(XLXN_20));
   AND3B2  XLXI_3 (.I0(A3), 
                  .I1(A2), 
                  .I2(A1), 
                  .O(XLXN_21));
   AND3B1  XLXI_4 (.I0(A1), 
                  .I1(A3), 
                  .I2(A0), 
                  .O(XLXN_22));
   AND3  XLXI_5 (.I0(A2), 
                .I1(A1), 
                .I2(A0), 
                .O(XLXN_23));
   OR5  XLXI_6 (.I0(XLXN_23), 
               .I1(XLXN_22), 
               .I2(XLXN_21), 
               .I3(XLXN_20), 
               .I4(XLXN_19), 
               .O(O0));
   AND2B2  XLXI_7 (.I0(A3), 
                  .I1(A0), 
                  .O(XLXN_28));
   AND2B1  XLXI_8 (.I0(A3), 
                  .I1(A2), 
                  .O(XLXN_29));
   AND3B1  XLXI_9 (.I0(A1), 
                  .I1(A2), 
                  .I2(A0), 
                  .O(XLXN_30));
   AND3B1  XLXI_10 (.I0(A2), 
                   .I1(A1), 
                   .I2(A0), 
                   .O(XLXN_31));
   OR4  XLXI_11 (.I0(XLXN_31), 
                .I1(XLXN_30), 
                .I2(XLXN_29), 
                .I3(XLXN_28), 
                .O(O1));
endmodule
`timescale 1ns / 1ps

module S1_MUSER_Encrypt(A0, 
                        A1, 
                        A2, 
                        A3, 
                        O0, 
                        O1);

    input A0;
    input A1;
    input A2;
    input A3;
   output O0;
   output O1;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_21;
   wire XLXN_22;
   
   OR4  XLXI_1 (.I0(XLXN_4), 
               .I1(XLXN_3), 
               .I2(XLXN_2), 
               .I3(XLXN_1), 
               .O(O0));
   AND3  XLXI_2 (.I0(A3), 
                .I1(A2), 
                .I2(A1), 
                .O(XLXN_1));
   AND3B2  XLXI_3 (.I0(A3), 
                  .I1(A2), 
                  .I2(A0), 
                  .O(XLXN_2));
   AND3B2  XLXI_4 (.I0(A0), 
                  .I1(A1), 
                  .I2(A2), 
                  .O(XLXN_3));
   AND3B2  XLXI_5 (.I0(A3), 
                  .I1(A2), 
                  .I2(A1), 
                  .O(XLXN_4));
   AND3B1  XLXI_6 (.I0(A0), 
                  .I1(A2), 
                  .I2(A1), 
                  .O(XLXN_19));
   OR4  XLXI_7 (.I0(XLXN_22), 
               .I1(XLXN_21), 
               .I2(XLXN_20), 
               .I3(XLXN_19), 
               .O(O1));
   AND3  XLXI_8 (.I0(A3), 
                .I1(A1), 
                .I2(A0), 
                .O(XLXN_20));
   AND3B2  XLXI_9 (.I0(A0), 
                  .I1(A1), 
                  .I2(A3), 
                  .O(XLXN_21));
   AND3B2  XLXI_10 (.I0(A3), 
                   .I1(A1), 
                   .I2(A0), 
                   .O(XLXN_22));
endmodule
`timescale 1ns / 1ps

module Xor8Bit_MUSER_Encrypt(A0, 
                             A1, 
                             A2, 
                             A3, 
                             A4, 
                             A5, 
                             A6, 
                             A7, 
                             B0, 
                             B1, 
                             B2, 
                             B3, 
                             B4, 
                             B5, 
                             B6, 
                             B7, 
                             O0, 
                             O1, 
                             O2, 
                             O3, 
                             O4, 
                             O5, 
                             O6, 
                             O7);

    input A0;
    input A1;
    input A2;
    input A3;
    input A4;
    input A5;
    input A6;
    input A7;
    input B0;
    input B1;
    input B2;
    input B3;
    input B4;
    input B5;
    input B6;
    input B7;
   output O0;
   output O1;
   output O2;
   output O3;
   output O4;
   output O5;
   output O6;
   output O7;
   
   
   XOR2  XLXI_1 (.I0(B0), 
                .I1(A0), 
                .O(O0));
   XOR2  XLXI_2 (.I0(B1), 
                .I1(A1), 
                .O(O1));
   XOR2  XLXI_3 (.I0(B2), 
                .I1(A2), 
                .O(O2));
   XOR2  XLXI_4 (.I0(B3), 
                .I1(A3), 
                .O(O3));
   XOR2  XLXI_5 (.I0(B4), 
                .I1(A4), 
                .O(O4));
   XOR2  XLXI_6 (.I0(B5), 
                .I1(A5), 
                .O(O5));
   XOR2  XLXI_7 (.I0(B6), 
                .I1(A6), 
                .O(O6));
   XOR2  XLXI_8 (.I0(B7), 
                .I1(A7), 
                .O(O7));
endmodule
`timescale 1ns / 1ps

module EP_MUSER_Encrypt(B0, 
                        B1, 
                        B2, 
                        B3, 
                        O0, 
                        O1, 
                        O2, 
                        O3, 
                        O4, 
                        O5, 
                        O6, 
                        O7);

    input B0;
    input B1;
    input B2;
    input B3;
   output O0;
   output O1;
   output O2;
   output O3;
   output O4;
   output O5;
   output O6;
   output O7;
   
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_21;
   wire XLXN_22;
   
   BUF  XLXI_1 (.I(B0), 
               .O(XLXN_16));
   BUF  XLXI_2 (.I(B1), 
               .O(XLXN_17));
   BUF  XLXI_5 (.I(B2), 
               .O(XLXN_21));
   BUF  XLXI_6 (.I(B3), 
               .O(XLXN_22));
   BUF  XLXI_8 (.I(XLXN_16), 
               .O(O1));
   BUF  XLXI_9 (.I(XLXN_16), 
               .O(O7));
   BUF  XLXI_10 (.I(XLXN_17), 
                .O(O2));
   BUF  XLXI_11 (.I(XLXN_17), 
                .O(O4));
   BUF  XLXI_12 (.I(XLXN_21), 
                .O(O3));
   BUF  XLXI_13 (.I(XLXN_21), 
                .O(O5));
   BUF  XLXI_14 (.I(XLXN_22), 
                .O(O0));
   BUF  XLXI_15 (.I(XLXN_22), 
                .O(O6));
endmodule
`timescale 1ns / 1ps

module F_Function_MUSER_Encrypt(A0, 
                                A1, 
                                A2, 
                                A3, 
                                K0, 
                                K1, 
                                K2, 
                                K3, 
                                K4, 
                                K5, 
                                K6, 
                                K7, 
                                O0, 
                                O1, 
                                O2, 
                                O3);

    input A0;
    input A1;
    input A2;
    input A3;
    input K0;
    input K1;
    input K2;
    input K3;
    input K4;
    input K5;
    input K6;
    input K7;
   output O0;
   output O1;
   output O2;
   output O3;
   
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_24;
   wire XLXN_25;
   wire XLXN_26;
   wire XLXN_27;
   wire XLXN_28;
   wire XLXN_30;
   wire XLXN_31;
   wire XLXN_32;
   wire XLXN_33;
   wire XLXN_34;
   wire XLXN_35;
   wire XLXN_36;
   wire XLXN_37;
   wire XLXN_38;
   wire XLXN_39;
   wire XLXN_40;
   wire XLXN_41;
   
   EP_MUSER_Encrypt  EP_0 (.B0(A0), 
                          .B1(A1), 
                          .B2(A2), 
                          .B3(A3), 
                          .O0(XLXN_21), 
                          .O1(XLXN_22), 
                          .O2(XLXN_23), 
                          .O3(XLXN_24), 
                          .O4(XLXN_25), 
                          .O5(XLXN_26), 
                          .O6(XLXN_27), 
                          .O7(XLXN_28));
   P4_MUSER_Encrypt  P4_0 (.B0(XLXN_38), 
                          .B1(XLXN_39), 
                          .B2(XLXN_40), 
                          .B3(XLXN_41), 
                          .O0(O0), 
                          .O1(O1), 
                          .O2(O2), 
                          .O3(O3));
   S0_MUSER_Encrypt  S0_0 (.A0(XLXN_34), 
                          .A1(XLXN_35), 
                          .A2(XLXN_36), 
                          .A3(XLXN_37), 
                          .O0(XLXN_38), 
                          .O1(XLXN_39));
   S1_MUSER_Encrypt  S1_0 (.A0(XLXN_30), 
                          .A1(XLXN_31), 
                          .A2(XLXN_32), 
                          .A3(XLXN_33), 
                          .O0(XLXN_40), 
                          .O1(XLXN_41));
   Xor8Bit_MUSER_Encrypt  XOR8 (.A0(XLXN_21), 
                               .A1(XLXN_22), 
                               .A2(XLXN_23), 
                               .A3(XLXN_24), 
                               .A4(XLXN_25), 
                               .A5(XLXN_26), 
                               .A6(XLXN_27), 
                               .A7(XLXN_28), 
                               .B0(K0), 
                               .B1(K1), 
                               .B2(K2), 
                               .B3(K3), 
                               .B4(K4), 
                               .B5(K5), 
                               .B6(K6), 
                               .B7(K7), 
                               .O0(XLXN_34), 
                               .O1(XLXN_35), 
                               .O2(XLXN_36), 
                               .O3(XLXN_37), 
                               .O4(XLXN_30), 
                               .O5(XLXN_31), 
                               .O6(XLXN_32), 
                               .O7(XLXN_33));
endmodule
`timescale 1ns / 1ps

module Xor4Bit_MUSER_Encrypt(A0, 
                             A1, 
                             A2, 
                             A3, 
                             B0, 
                             B1, 
                             B2, 
                             B3, 
                             O0, 
                             O1, 
                             O2, 
                             O3);

    input A0;
    input A1;
    input A2;
    input A3;
    input B0;
    input B1;
    input B2;
    input B3;
   output O0;
   output O1;
   output O2;
   output O3;
   
   
   XOR2  XLXI_1 (.I0(B0), 
                .I1(A0), 
                .O(O0));
   XOR2  XLXI_2 (.I0(B1), 
                .I1(A1), 
                .O(O1));
   XOR2  XLXI_3 (.I0(B2), 
                .I1(A2), 
                .O(O2));
   XOR2  XLXI_4 (.I0(B3), 
                .I1(A3), 
                .O(O3));
endmodule
`timescale 1ns / 1ps

module round_MUSER_Encrypt(A0, 
                           A1, 
                           A2, 
                           A3, 
                           A4, 
                           A5, 
                           A6, 
                           A7, 
                           K0, 
                           K1, 
                           K2, 
                           K3, 
                           K4, 
                           K5, 
                           K6, 
                           K7, 
                           O0, 
                           O1, 
                           O2, 
                           O3, 
                           O4, 
                           O5, 
                           O6, 
                           O7);

    input A0;
    input A1;
    input A2;
    input A3;
    input A4;
    input A5;
    input A6;
    input A7;
    input K0;
    input K1;
    input K2;
    input K3;
    input K4;
    input K5;
    input K6;
    input K7;
   output O0;
   output O1;
   output O2;
   output O3;
   output O4;
   output O5;
   output O6;
   output O7;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   
   F_Function_MUSER_Encrypt  FFUNCTION (.A0(A4), 
                                       .A1(A5), 
                                       .A2(A6), 
                                       .A3(A7), 
                                       .K0(K0), 
                                       .K1(K1), 
                                       .K2(K2), 
                                       .K3(K3), 
                                       .K4(K4), 
                                       .K5(K5), 
                                       .K6(K6), 
                                       .K7(K7), 
                                       .O0(XLXN_1), 
                                       .O1(XLXN_2), 
                                       .O2(XLXN_3), 
                                       .O3(XLXN_4));
   BUF  XLXI_3 (.I(A4), 
               .O(O4));
   BUF  XLXI_4 (.I(A5), 
               .O(O5));
   BUF  XLXI_5 (.I(A6), 
               .O(O6));
   BUF  XLXI_6 (.I(A7), 
               .O(O7));
   Xor4Bit_MUSER_Encrypt  XOR4 (.A0(A0), 
                               .A1(A1), 
                               .A2(A2), 
                               .A3(A3), 
                               .B0(XLXN_1), 
                               .B1(XLXN_2), 
                               .B2(XLXN_3), 
                               .B3(XLXN_4), 
                               .O0(O0), 
                               .O1(O1), 
                               .O2(O2), 
                               .O3(O3));
endmodule
`timescale 1ns / 1ps

module IP_MUSER_Encrypt(B0, 
                        B1, 
                        B2, 
                        B3, 
                        B4, 
                        B5, 
                        B6, 
                        B7, 
                        O0, 
                        O1, 
                        O2, 
                        O3, 
                        O4, 
                        O5, 
                        O6, 
                        O7);

    input B0;
    input B1;
    input B2;
    input B3;
    input B4;
    input B5;
    input B6;
    input B7;
   output O0;
   output O1;
   output O2;
   output O3;
   output O4;
   output O5;
   output O6;
   output O7;
   
   
   BUF  XLXI_1 (.I(B0), 
               .O(O3));
   BUF  XLXI_2 (.I(B1), 
               .O(O0));
   BUF  XLXI_3 (.I(B2), 
               .O(O2));
   BUF  XLXI_4 (.I(B3), 
               .O(O4));
   BUF  XLXI_5 (.I(B4), 
               .O(O6));
   BUF  XLXI_6 (.I(B5), 
               .O(O1));
   BUF  XLXI_7 (.I(B6), 
               .O(O7));
   BUF  XLXI_8 (.I(B7), 
               .O(O5));
endmodule
`timescale 1ns / 1ps

module LS2_MUSER_Encrypt(B0, 
                         B1, 
                         B2, 
                         B3, 
                         B4, 
                         O0, 
                         O1, 
                         O2, 
                         O3, 
                         O4);

    input B0;
    input B1;
    input B2;
    input B3;
    input B4;
   output O0;
   output O1;
   output O2;
   output O3;
   output O4;
   
   
   BUF  XLXI_1 (.I(B0), 
               .O(O3));
   BUF  XLXI_2 (.I(B1), 
               .O(O4));
   BUF  XLXI_3 (.I(B2), 
               .O(O0));
   BUF  XLXI_4 (.I(B3), 
               .O(O1));
   BUF  XLXI_5 (.I(B4), 
               .O(O2));
endmodule
`timescale 1ns / 1ps

module P8_MUSER_Encrypt(B0, 
                        B1, 
                        B2, 
                        B3, 
                        B4, 
                        B5, 
                        B6, 
                        B7, 
                        B8, 
                        B9, 
                        O0, 
                        O1, 
                        O2, 
                        O3, 
                        O4, 
                        O5, 
                        O6, 
                        O7);

    input B0;
    input B1;
    input B2;
    input B3;
    input B4;
    input B5;
    input B6;
    input B7;
    input B8;
    input B9;
   output O0;
   output O1;
   output O2;
   output O3;
   output O4;
   output O5;
   output O6;
   output O7;
   
   
   BUF  XLXI_2 (.I(B0), 
               .O());
   BUF  XLXI_3 (.I(B1), 
               .O());
   BUF  XLXI_4 (.I(B2), 
               .O(O1));
   BUF  XLXI_5 (.I(B3), 
               .O(O3));
   BUF  XLXI_6 (.I(B4), 
               .O(O5));
   BUF  XLXI_7 (.I(B5), 
               .O(O0));
   BUF  XLXI_8 (.I(B6), 
               .O(O2));
   BUF  XLXI_9 (.I(B7), 
               .O(O4));
   BUF  XLXI_10 (.I(B8), 
                .O(O7));
   BUF  XLXI_11 (.I(B9), 
                .O(O6));
endmodule
`timescale 1ns / 1ps

module LS1_MUSER_Encrypt(B0, 
                         B1, 
                         B2, 
                         B3, 
                         B4, 
                         O0, 
                         O1, 
                         O2, 
                         O3, 
                         O4);

    input B0;
    input B1;
    input B2;
    input B3;
    input B4;
   output O0;
   output O1;
   output O2;
   output O3;
   output O4;
   
   
   BUF  XLXI_1 (.I(B0), 
               .O(O4));
   BUF  XLXI_2 (.I(B1), 
               .O(O0));
   BUF  XLXI_3 (.I(B2), 
               .O(O1));
   BUF  XLXI_4 (.I(B3), 
               .O(O2));
   BUF  XLXI_5 (.I(B4), 
               .O(O3));
endmodule
`timescale 1ns / 1ps

module P10_MUSER_Encrypt(B0, 
                         B1, 
                         B2, 
                         B3, 
                         B4, 
                         B5, 
                         B6, 
                         B7, 
                         B8, 
                         B9, 
                         O0, 
                         O1, 
                         O2, 
                         O3, 
                         O4, 
                         O5, 
                         O6, 
                         O7, 
                         O8, 
                         O9);

    input B0;
    input B1;
    input B2;
    input B3;
    input B4;
    input B5;
    input B6;
    input B7;
    input B8;
    input B9;
   output O0;
   output O1;
   output O2;
   output O3;
   output O4;
   output O5;
   output O6;
   output O7;
   output O8;
   output O9;
   
   
   BUF  XLXI_1 (.I(B0), 
               .O(O6));
   BUF  XLXI_2 (.I(B1), 
               .O(O2));
   BUF  XLXI_4 (.I(B2), 
               .O(O0));
   BUF  XLXI_5 (.I(B3), 
               .O(O4));
   BUF  XLXI_6 (.I(B4), 
               .O(O1));
   BUF  XLXI_7 (.I(B5), 
               .O(O9));
   BUF  XLXI_8 (.I(B6), 
               .O(O3));
   BUF  XLXI_9 (.I(B7), 
               .O(O8));
   BUF  XLXI_10 (.I(B8), 
                .O(O7));
   BUF  XLXI_11 (.I(B9), 
                .O(O5));
endmodule
`timescale 1ns / 1ps

module Key_MUSER_Encrypt(A0, 
                         A1, 
                         A2, 
                         A3, 
                         A4, 
                         A5, 
                         A6, 
                         A7, 
                         A8, 
                         A9, 
                         K1_0, 
                         K1_1, 
                         K1_2, 
                         K1_3, 
                         K1_4, 
                         K1_5, 
                         K1_6, 
                         K1_7, 
                         K2_0, 
                         K2_1, 
                         K2_2, 
                         K2_3, 
                         K2_4, 
                         K2_5, 
                         K2_6, 
                         K2_7);

    input A0;
    input A1;
    input A2;
    input A3;
    input A4;
    input A5;
    input A6;
    input A7;
    input A8;
    input A9;
   output K1_0;
   output K1_1;
   output K1_2;
   output K1_3;
   output K1_4;
   output K1_5;
   output K1_6;
   output K1_7;
   output K2_0;
   output K2_1;
   output K2_2;
   output K2_3;
   output K2_4;
   output K2_5;
   output K2_6;
   output K2_7;
   
   wire XLXN_27;
   wire XLXN_32;
   wire XLXN_33;
   wire XLXN_34;
   wire XLXN_35;
   wire XLXN_36;
   wire XLXN_37;
   wire XLXN_38;
   wire XLXN_39;
   wire XLXN_40;
   wire XLXN_51;
   wire XLXN_52;
   wire XLXN_53;
   wire XLXN_56;
   wire XLXN_81;
   wire XLXN_82;
   wire XLXN_83;
   wire XLXN_84;
   wire XLXN_85;
   wire XLXN_86;
   wire XLXN_87;
   wire XLXN_88;
   wire XLXN_89;
   wire XLXN_90;
   wire XLXN_92;
   wire XLXN_94;
   wire XLXN_96;
   wire XLXN_97;
   wire XLXN_98;
   wire XLXN_99;
   
   LS1_MUSER_Encrypt  LS1_0 (.B0(XLXN_27), 
                            .B1(XLXN_32), 
                            .B2(XLXN_33), 
                            .B3(XLXN_34), 
                            .B4(XLXN_35), 
                            .O0(XLXN_51), 
                            .O1(XLXN_52), 
                            .O2(XLXN_53), 
                            .O3(XLXN_92), 
                            .O4(XLXN_94));
   LS1_MUSER_Encrypt  LS1_1 (.B0(XLXN_36), 
                            .B1(XLXN_37), 
                            .B2(XLXN_38), 
                            .B3(XLXN_39), 
                            .B4(XLXN_40), 
                            .O0(XLXN_56), 
                            .O1(XLXN_96), 
                            .O2(XLXN_97), 
                            .O3(XLXN_98), 
                            .O4(XLXN_99));
   LS2_MUSER_Encrypt  LS2_0 (.B0(XLXN_51), 
                            .B1(XLXN_52), 
                            .B2(XLXN_53), 
                            .B3(XLXN_92), 
                            .B4(XLXN_94), 
                            .O0(XLXN_81), 
                            .O1(XLXN_82), 
                            .O2(XLXN_83), 
                            .O3(XLXN_84), 
                            .O4(XLXN_85));
   LS2_MUSER_Encrypt  LS2_1 (.B0(XLXN_56), 
                            .B1(XLXN_96), 
                            .B2(XLXN_97), 
                            .B3(XLXN_98), 
                            .B4(XLXN_99), 
                            .O0(XLXN_86), 
                            .O1(XLXN_87), 
                            .O2(XLXN_88), 
                            .O3(XLXN_89), 
                            .O4(XLXN_90));
   P8_MUSER_Encrypt  P8_0 (.B0(XLXN_51), 
                          .B1(XLXN_52), 
                          .B2(XLXN_53), 
                          .B3(XLXN_92), 
                          .B4(XLXN_94), 
                          .B5(XLXN_56), 
                          .B6(XLXN_96), 
                          .B7(XLXN_97), 
                          .B8(XLXN_98), 
                          .B9(XLXN_99), 
                          .O0(K1_0), 
                          .O1(K1_1), 
                          .O2(K1_2), 
                          .O3(K1_3), 
                          .O4(K1_4), 
                          .O5(K1_5), 
                          .O6(K1_6), 
                          .O7(K1_7));
   P8_MUSER_Encrypt  P8_1 (.B0(XLXN_81), 
                          .B1(XLXN_82), 
                          .B2(XLXN_83), 
                          .B3(XLXN_84), 
                          .B4(XLXN_85), 
                          .B5(XLXN_86), 
                          .B6(XLXN_87), 
                          .B7(XLXN_88), 
                          .B8(XLXN_89), 
                          .B9(XLXN_90), 
                          .O0(K2_0), 
                          .O1(K2_1), 
                          .O2(K2_2), 
                          .O3(K2_3), 
                          .O4(K2_4), 
                          .O5(K2_5), 
                          .O6(K2_6), 
                          .O7(K2_7));
   P10_MUSER_Encrypt  P10_0 (.B0(A0), 
                            .B1(A1), 
                            .B2(A2), 
                            .B3(A3), 
                            .B4(A4), 
                            .B5(A5), 
                            .B6(A6), 
                            .B7(A7), 
                            .B8(A8), 
                            .B9(A9), 
                            .O0(XLXN_27), 
                            .O1(XLXN_32), 
                            .O2(XLXN_33), 
                            .O3(XLXN_34), 
                            .O4(XLXN_35), 
                            .O5(XLXN_36), 
                            .O6(XLXN_37), 
                            .O7(XLXN_38), 
                            .O8(XLXN_39), 
                            .O9(XLXN_40));
endmodule
`timescale 1ns / 1ps

module Encrypt(K0, 
               K1, 
               K2, 
               K3, 
               K4, 
               K5, 
               K6, 
               K7, 
               K8, 
               K9, 
               P0, 
               P1, 
               P2, 
               P3, 
               P4, 
               P5, 
               P6, 
               P7, 
               C0, 
               C1, 
               C2, 
               C3, 
               C4, 
               C5, 
               C6, 
               C7);

    input K0;
    input K1;
    input K2;
    input K3;
    input K4;
    input K5;
    input K6;
    input K7;
    input K8;
    input K9;
    input P0;
    input P1;
    input P2;
    input P3;
    input P4;
    input P5;
    input P6;
    input P7;
   output C0;
   output C1;
   output C2;
   output C3;
   output C4;
   output C5;
   output C6;
   output C7;
   
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_24;
   wire XLXN_25;
   wire XLXN_26;
   wire XLXN_27;
   wire XLXN_28;
   wire XLXN_108;
   wire XLXN_109;
   wire XLXN_110;
   wire XLXN_111;
   wire XLXN_113;
   wire XLXN_114;
   wire XLXN_115;
   wire XLXN_116;
   wire XLXN_126;
   wire XLXN_127;
   wire XLXN_128;
   wire XLXN_129;
   wire XLXN_130;
   wire XLXN_131;
   wire XLXN_132;
   wire XLXN_151;
   wire XLXN_152;
   wire XLXN_153;
   wire XLXN_155;
   wire XLXN_166;
   wire XLXN_239;
   wire XLXN_240;
   wire XLXN_241;
   wire XLXN_242;
   wire XLXN_243;
   wire XLXN_244;
   wire XLXN_245;
   wire XLXN_246;
   
   IP_MUSER_Encrypt  IP_0 (.B0(P0), 
                          .B1(P1), 
                          .B2(P2), 
                          .B3(P3), 
                          .B4(P4), 
                          .B5(P5), 
                          .B6(P6), 
                          .B7(P7), 
                          .O0(XLXN_151), 
                          .O1(XLXN_152), 
                          .O2(XLXN_153), 
                          .O3(XLXN_155), 
                          .O4(XLXN_25), 
                          .O5(XLXN_26), 
                          .O6(XLXN_27), 
                          .O7(XLXN_28));
   IP1_MUSER_Encrypt  IP1_0 (.B0(XLXN_9), 
                            .B1(XLXN_10), 
                            .B2(XLXN_11), 
                            .B3(XLXN_12), 
                            .B4(XLXN_13), 
                            .B5(XLXN_14), 
                            .B6(XLXN_15), 
                            .B7(XLXN_16), 
                            .O0(C0), 
                            .O1(C1), 
                            .O2(C2), 
                            .O3(C3), 
                            .O4(C4), 
                            .O5(C5), 
                            .O6(C6), 
                            .O7(C7));
   Key_MUSER_Encrypt  KEYGenerator (.A0(K0), 
                                   .A1(K1), 
                                   .A2(K2), 
                                   .A3(K3), 
                                   .A4(K4), 
                                   .A5(K5), 
                                   .A6(K6), 
                                   .A7(K7), 
                                   .A8(K8), 
                                   .A9(K9), 
                                   .K1_0(XLXN_17), 
                                   .K1_1(XLXN_18), 
                                   .K1_2(XLXN_19), 
                                   .K1_3(XLXN_20), 
                                   .K1_4(XLXN_21), 
                                   .K1_5(XLXN_22), 
                                   .K1_6(XLXN_23), 
                                   .K1_7(XLXN_24), 
                                   .K2_0(XLXN_108), 
                                   .K2_1(XLXN_109), 
                                   .K2_2(XLXN_110), 
                                   .K2_3(XLXN_111), 
                                   .K2_4(XLXN_113), 
                                   .K2_5(XLXN_114), 
                                   .K2_6(XLXN_115), 
                                   .K2_7(XLXN_116));
   round_MUSER_Encrypt  Round1 (.A0(XLXN_151), 
                               .A1(XLXN_152), 
                               .A2(XLXN_153), 
                               .A3(XLXN_155), 
                               .A4(XLXN_25), 
                               .A5(XLXN_26), 
                               .A6(XLXN_27), 
                               .A7(XLXN_28), 
                               .K0(XLXN_17), 
                               .K1(XLXN_18), 
                               .K2(XLXN_19), 
                               .K3(XLXN_20), 
                               .K4(XLXN_21), 
                               .K5(XLXN_22), 
                               .K6(XLXN_23), 
                               .K7(XLXN_24), 
                               .O0(XLXN_166), 
                               .O1(XLXN_126), 
                               .O2(XLXN_127), 
                               .O3(XLXN_128), 
                               .O4(XLXN_129), 
                               .O5(XLXN_130), 
                               .O6(XLXN_131), 
                               .O7(XLXN_132));
   round_MUSER_Encrypt  Round2 (.A0(XLXN_246), 
                               .A1(XLXN_245), 
                               .A2(XLXN_244), 
                               .A3(XLXN_243), 
                               .A4(XLXN_239), 
                               .A5(XLXN_240), 
                               .A6(XLXN_241), 
                               .A7(XLXN_242), 
                               .K0(XLXN_108), 
                               .K1(XLXN_109), 
                               .K2(XLXN_110), 
                               .K3(XLXN_111), 
                               .K4(XLXN_113), 
                               .K5(XLXN_114), 
                               .K6(XLXN_115), 
                               .K7(XLXN_116), 
                               .O0(XLXN_9), 
                               .O1(XLXN_10), 
                               .O2(XLXN_11), 
                               .O3(XLXN_12), 
                               .O4(XLXN_13), 
                               .O5(XLXN_14), 
                               .O6(XLXN_15), 
                               .O7(XLXN_16));
   SW_MUSER_Encrypt  SW_0 (.B0(XLXN_166), 
                          .B1(XLXN_126), 
                          .B2(XLXN_127), 
                          .B3(XLXN_128), 
                          .B4(XLXN_129), 
                          .B5(XLXN_130), 
                          .B6(XLXN_131), 
                          .B7(XLXN_132), 
                          .O0(XLXN_246), 
                          .O1(XLXN_245), 
                          .O2(XLXN_244), 
                          .O3(XLXN_243), 
                          .O4(XLXN_239), 
                          .O5(XLXN_240), 
                          .O6(XLXN_241), 
                          .O7(XLXN_242));
endmodule
